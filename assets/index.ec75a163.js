import xt from"https://unpkg.com/@mapbox/mapbox-gl-draw@1.3.0/src/lib/theme.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function r(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerpolicy&&(i.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?i.credentials="include":o.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(o){if(o.ep)return;o.ep=!0;const i=r(o);fetch(o.href,i)}})();function At(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return dt(e);case"FeatureCollection":return _t(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return Xe(e);default:throw new Error("unknown GeoJSON type")}}function dt(e){var t={type:"Feature"};return Object.keys(e).forEach(function(r){switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}}),t.properties=pt(e.properties),t.geometry=Xe(e.geometry),t}function pt(e){var t={};return e&&Object.keys(e).forEach(function(r){var n=e[r];typeof n=="object"?n===null?t[r]=null:Array.isArray(n)?t[r]=n.map(function(o){return o}):t[r]=pt(n):t[r]=n}),t}function _t(e){var t={type:"FeatureCollection"};return Object.keys(e).forEach(function(r){switch(r){case"type":case"features":return;default:t[r]=e[r]}}),t.features=e.features.map(function(r){return dt(r)}),t}function Xe(e){var t={type:e.type};return e.bbox&&(t.bbox=e.bbox),e.type==="GeometryCollection"?(t.geometries=e.geometries.map(function(r){return Xe(r)}),t):(t.coordinates=vt(e.coordinates),t)}function vt(e){var t=e;return typeof t[0]!="object"?t.slice():t.map(function(r){return vt(r)})}var _=63710088e-1,Ge={centimeters:_*100,centimetres:_*100,degrees:_/111325,feet:_*3.28084,inches:_*39.37,kilometers:_/1e3,kilometres:_/1e3,meters:_,metres:_,miles:_/1609.344,millimeters:_*1e3,millimetres:_*1e3,nauticalmiles:_/1852,radians:1,yards:_*1.0936},Nt={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:1/1e3,kilometres:1/1e3,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/_,yards:1.0936133},De={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function Y(e,t,r){r===void 0&&(r={});var n={type:"Feature"};return(r.id===0||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function Dt(e,t,r){switch(e){case"Point":return Z(t).geometry;case"LineString":return U(t).geometry;case"Polygon":return ze(t).geometry;case"MultiPoint":return mt(t).geometry;case"MultiLineString":return Je(t).geometry;case"MultiPolygon":return gt(t).geometry;default:throw new Error(e+" is invalid")}}function Z(e,t,r){if(r===void 0&&(r={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!Se(e[0])||!Se(e[1]))throw new Error("coordinates must contain numbers");var n={type:"Point",coordinates:e};return Y(n,t,r)}function kt(e,t,r){return r===void 0&&(r={}),H(e.map(function(n){return Z(n,t)}),r)}function ze(e,t,r){r===void 0&&(r={});for(var n=0,o=e;n<o.length;n++){var i=o[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<i[i.length-1].length;s++)if(i[i.length-1][s]!==i[0][s])throw new Error("First and last Position are not equivalent.")}var c={type:"Polygon",coordinates:e};return Y(c,t,r)}function Yt(e,t,r){return r===void 0&&(r={}),H(e.map(function(n){return ze(n,t)}),r)}function U(e,t,r){if(r===void 0&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");var n={type:"LineString",coordinates:e};return Y(n,t,r)}function Bt(e,t,r){return r===void 0&&(r={}),H(e.map(function(n){return U(n,t)}),r)}function H(e,t){t===void 0&&(t={});var r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function Je(e,t,r){r===void 0&&(r={});var n={type:"MultiLineString",coordinates:e};return Y(n,t,r)}function mt(e,t,r){r===void 0&&(r={});var n={type:"MultiPoint",coordinates:e};return Y(n,t,r)}function gt(e,t,r){r===void 0&&(r={});var n={type:"MultiPolygon",coordinates:e};return Y(n,t,r)}function Rt(e,t,r){r===void 0&&(r={});var n={type:"GeometryCollection",geometries:e};return Y(n,t,r)}function Vt(e,t){if(t===void 0&&(t=0),t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r}function yt(e,t){t===void 0&&(t="kilometers");var r=Ge[t];if(!r)throw new Error(t+" units is invalid");return e*r}function Ze(e,t){t===void 0&&(t="kilometers");var r=Ge[t];if(!r)throw new Error(t+" units is invalid");return e/r}function Ut(e,t){return wt(Ze(e,t))}function Xt(e){var t=e%360;return t<0&&(t+=360),t}function wt(e){var t=e%(2*Math.PI);return t*180/Math.PI}function Gt(e){var t=e%360;return t*Math.PI/180}function zt(e,t,r){if(t===void 0&&(t="kilometers"),r===void 0&&(r="kilometers"),!(e>=0))throw new Error("length must be a positive number");return yt(Ze(e,t),r)}function Jt(e,t,r){if(t===void 0&&(t="meters"),r===void 0&&(r="kilometers"),!(e>=0))throw new Error("area must be a positive number");var n=De[t];if(!n)throw new Error("invalid original units");var o=De[r];if(!o)throw new Error("invalid final units");return e/n*o}function Se(e){return!isNaN(e)&&e!==null&&!Array.isArray(e)}function Ie(e){return!!e&&e.constructor===Object}function Zt(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(e.length!==4&&e.length!==6)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(t){if(!Se(t))throw new Error("bbox must only contain numbers")})}function qt(e){if(!e)throw new Error("id is required");if(["string","number"].indexOf(typeof e)===-1)throw new Error("id must be a number or a string")}const Wt=Object.freeze(Object.defineProperty({__proto__:null,earthRadius:_,factors:Ge,unitsFactors:Nt,areaFactors:De,feature:Y,geometry:Dt,point:Z,points:kt,polygon:ze,polygons:Yt,lineString:U,lineStrings:Bt,featureCollection:H,multiLineString:Je,multiPoint:mt,multiPolygon:gt,geometryCollection:Rt,round:Vt,radiansToLength:yt,lengthToRadians:Ze,lengthToDegrees:Ut,bearingToAzimuth:Xt,radiansToDegrees:wt,degreesToRadians:Gt,convertLength:zt,convertArea:Jt,isNumber:Se,isObject:Ie,validateBBox:Zt,validateId:qt},Symbol.toStringTag,{value:"Module"}));function Qt(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if(e.type==="Feature"&&e.geometry!==null&&e.geometry.type==="Point")return e.geometry.coordinates;if(e.type==="Point")return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function q(e){if(Array.isArray(e))return e;if(e.type==="Feature"){if(e.geometry!==null)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function Le(e){return e.type==="Feature"?e.geometry:e}function ke(e){for(var t=q(e),r=0,n=1,o,i;n<t.length;)o=i||t[0],i=t[n],r+=(i[0]-o[0])*(i[1]+o[1]),n++;return r>0}function he(e,t,r){if(e!==null)for(var n,o,i,s,c,u,f,m=0,d=0,p,P=e.type,M=P==="FeatureCollection",y=P==="Feature",L=M?e.features.length:1,b=0;b<L;b++){f=M?e.features[b].geometry:y?e.geometry:e,p=f?f.type==="GeometryCollection":!1,c=p?f.geometries.length:1;for(var a=0;a<c;a++){var l=0,h=0;if(s=p?f.geometries[a]:f,s!==null){u=s.coordinates;var v=s.type;switch(m=r&&(v==="Polygon"||v==="MultiPolygon")?1:0,v){case null:break;case"Point":if(t(u,d,b,l,h)===!1)return!1;d++,l++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++){if(t(u[n],d,b,l,h)===!1)return!1;d++,v==="MultiPoint"&&l++}v==="LineString"&&l++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(o=0;o<u[n].length-m;o++){if(t(u[n][o],d,b,l,h)===!1)return!1;d++}v==="MultiLineString"&&l++,v==="Polygon"&&h++}v==="Polygon"&&l++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for(h=0,o=0;o<u[n].length;o++){for(i=0;i<u[n][o].length-m;i++){if(t(u[n][o][i],d,b,l,h)===!1)return!1;d++}h++}l++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)if(he(s.geometries[n],t,r)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function Kt(e,t,r,n){var o=r;return he(e,function(i,s,c,u,f){s===0&&r===void 0?o=i:o=t(o,i,s,c,u,f)},n),o}function Pt(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&t(e.features[r].properties,r)!==!1;r++);break;case"Feature":t(e.properties,0);break}}function $t(e,t,r){var n=r;return Pt(e,function(o,i){i===0&&r===void 0?n=o:n=t(n,o,i)}),n}function fe(e,t){if(e.type==="Feature")t(e,0);else if(e.type==="FeatureCollection")for(var r=0;r<e.features.length&&t(e.features[r],r)!==!1;r++);}function Ht(e,t,r){var n=r;return fe(e,function(o,i){i===0&&r===void 0?n=o:n=t(n,o,i)}),n}function jt(e){var t=[];return he(e,function(r){t.push(r)}),t}function we(e,t){var r,n,o,i,s,c,u,f,m,d,p=0,P=e.type==="FeatureCollection",M=e.type==="Feature",y=P?e.features.length:1;for(r=0;r<y;r++){for(c=P?e.features[r].geometry:M?e.geometry:e,f=P?e.features[r].properties:M?e.properties:{},m=P?e.features[r].bbox:M?e.bbox:void 0,d=P?e.features[r].id:M?e.id:void 0,u=c?c.type==="GeometryCollection":!1,s=u?c.geometries.length:1,o=0;o<s;o++){if(i=u?c.geometries[o]:c,i===null){if(t(null,p,f,m,d)===!1)return!1;continue}switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(t(i,p,f,m,d)===!1)return!1;break}case"GeometryCollection":{for(n=0;n<i.geometries.length;n++)if(t(i.geometries[n],p,f,m,d)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}p++}}function er(e,t,r){var n=r;return we(e,function(o,i,s,c,u){i===0&&r===void 0?n=o:n=t(n,o,i,s,c,u)}),n}function oe(e,t){we(e,function(r,n,o,i,s){var c=r===null?null:r.type;switch(c){case null:case"Point":case"LineString":case"Polygon":return t(Y(r,o,{bbox:i,id:s}),n,0)===!1?!1:void 0}var u;switch(c){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon";break}for(var f=0;f<r.coordinates.length;f++){var m=r.coordinates[f],d={type:u,coordinates:m};if(t(Y(d,o),n,f)===!1)return!1}})}function tr(e,t,r){var n=r;return oe(e,function(o,i,s){i===0&&s===0&&r===void 0?n=o:n=t(n,o,i,s)}),n}function Mt(e,t){oe(e,function(r,n,o){var i=0;if(!!r.geometry){var s=r.geometry.type;if(!(s==="Point"||s==="MultiPoint")){var c,u=0,f=0,m=0;if(he(r,function(d,p,P,M,y){if(c===void 0||n>u||M>f||y>m){c=d,u=n,f=M,m=y,i=0;return}var L=U([c,d],r.properties);if(t(L,n,o,y,i)===!1)return!1;i++,c=d})===!1)return!1}}})}function rr(e,t,r){var n=r,o=!1;return Mt(e,function(i,s,c,u,f){o===!1&&r===void 0?n=i:n=t(n,i,s,c,u,f),o=!0}),n}function Et(e,t){if(!e)throw new Error("geojson is required");oe(e,function(r,n,o){if(r.geometry!==null){var i=r.geometry.type,s=r.geometry.coordinates;switch(i){case"LineString":if(t(r,n,o,0,0)===!1)return!1;break;case"Polygon":for(var c=0;c<s.length;c++)if(t(U(s[c],r.properties),n,o,c)===!1)return!1;break}}})}function nr(e,t,r){var n=r;return Et(e,function(o,i,s,c){i===0&&r===void 0?n=o:n=t(n,o,i,s,c)}),n}function ir(e,t){if(t=t||{},!Ie(t))throw new Error("options is invalid");var r=t.featureIndex||0,n=t.multiFeatureIndex||0,o=t.geometryIndex||0,i=t.segmentIndex||0,s=t.properties,c;switch(e.type){case"FeatureCollection":r<0&&(r=e.features.length+r),s=s||e.features[r].properties,c=e.features[r].geometry;break;case"Feature":s=s||e.properties,c=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":c=e;break;default:throw new Error("geojson is invalid")}if(c===null)return null;var u=c.coordinates;switch(c.type){case"Point":case"MultiPoint":return null;case"LineString":return i<0&&(i=u.length+i-1),U([u[i],u[i+1]],s,t);case"Polygon":return o<0&&(o=u.length+o),i<0&&(i=u[o].length+i-1),U([u[o][i],u[o][i+1]],s,t);case"MultiLineString":return n<0&&(n=u.length+n),i<0&&(i=u[n].length+i-1),U([u[n][i],u[n][i+1]],s,t);case"MultiPolygon":return n<0&&(n=u.length+n),o<0&&(o=u[n].length+o),i<0&&(i=u[n][o].length-i-1),U([u[n][o][i],u[n][o][i+1]],s,t)}throw new Error("geojson is invalid")}function or(e,t){if(t=t||{},!Ie(t))throw new Error("options is invalid");var r=t.featureIndex||0,n=t.multiFeatureIndex||0,o=t.geometryIndex||0,i=t.coordIndex||0,s=t.properties,c;switch(e.type){case"FeatureCollection":r<0&&(r=e.features.length+r),s=s||e.features[r].properties,c=e.features[r].geometry;break;case"Feature":s=s||e.properties,c=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":c=e;break;default:throw new Error("geojson is invalid")}if(c===null)return null;var u=c.coordinates;switch(c.type){case"Point":return Z(u,s,t);case"MultiPoint":return n<0&&(n=u.length+n),Z(u[n],s,t);case"LineString":return i<0&&(i=u.length+i),Z(u[i],s,t);case"Polygon":return o<0&&(o=u.length+o),i<0&&(i=u[o].length+i),Z(u[o][i],s,t);case"MultiLineString":return n<0&&(n=u.length+n),i<0&&(i=u[n].length+i),Z(u[n][i],s,t);case"MultiPolygon":return n<0&&(n=u.length+n),o<0&&(o=u[n].length+o),i<0&&(i=u[n][o].length-i),Z(u[n][o][i],s,t)}throw new Error("geojson is invalid")}const ar=Object.freeze(Object.defineProperty({__proto__:null,coordAll:jt,coordEach:he,coordReduce:Kt,featureEach:fe,featureReduce:Ht,findPoint:or,findSegment:ir,flattenEach:oe,flattenReduce:tr,geomEach:we,geomReduce:er,lineEach:Et,lineReduce:nr,propEach:Pt,propReduce:$t,segmentEach:Mt,segmentReduce:rr},Symbol.toStringTag,{value:"Module"}));function sr(e,t){if(t=t||{},!Ie(t))throw new Error("options is invalid");var r=t.reverse||!1,n=t.mutate||!1;if(!e)throw new Error("<geojson> is required");if(typeof r!="boolean")throw new Error("<reverse> must be a boolean");if(typeof n!="boolean")throw new Error("<mutate> must be a boolean");n===!1&&(e=At(e));var o=[];switch(e.type){case"GeometryCollection":return we(e,function(i){Ce(i,r)}),e;case"FeatureCollection":return fe(e,function(i){fe(Ce(i,r),function(s){o.push(s)})}),H(o)}return Ce(e,r)}function Ce(e,t){var r=e.type==="Feature"?e.geometry.type:e.type;switch(r){case"GeometryCollection":return we(e,function(n){Ce(n,t)}),e;case"LineString":return je(q(e),t),e;case"Polygon":return et(q(e),t),e;case"MultiLineString":return q(e).forEach(function(n){je(n,t)}),e;case"MultiPolygon":return q(e).forEach(function(n){et(n,t)}),e;case"Point":case"MultiPoint":return e}}function je(e,t){ke(e)===t&&e.reverse()}function et(e,t){ke(e[0])!==t&&e[0].reverse();for(var r=1;r<e.length;r++)ke(e[r])===t&&e[r].reverse()}function ur(e,t){var r=0,n=0,o=0,i=0,s=0,c=0,u=0,f=0,m=null,d=null,p=e[0],P=e[1],M=t.length;for(r;r<M;r++){n=0;var y=t[r].length-1,L=t[r];if(m=L[0],m[0]!==L[y][0]&&m[1]!==L[y][1])throw new Error("First and last coordinates in a ring must be the same");for(s=m[0]-p,c=m[1]-P,n;n<y;n++){if(d=L[n+1],f=d[1]-P,c<0&&f<0||c>0&&f>0){m=d,c=f,s=m[0]-p;continue}if(u=d[0]-e[0],f>0&&c<=0){if(i=s*f-u*c,i>0)o=o+1;else if(i===0)return 0}else if(c>0&&f<=0){if(i=s*f-u*c,i<0)o=o+1;else if(i===0)return 0}else if(f===0&&c<0){if(i=s*f-u*c,i===0)return 0}else if(c===0&&f<0){if(i=s*f-u*c,i===0)return 0}else if(c===0&&f===0){if(u<=0&&s>=0)return 0;if(s<=0&&u>=0)return 0}m=d,c=f,s=u}}return o%2!==0}const K=11102230246251565e-32,A=134217729,lr=(3+8*K)*K;function _e(e,t,r,n,o){let i,s,c,u,f=t[0],m=n[0],d=0,p=0;m>f==m>-f?(i=f,f=t[++d]):(i=m,m=n[++p]);let P=0;if(d<e&&p<r)for(m>f==m>-f?(s=f+i,c=i-(s-f),f=t[++d]):(s=m+i,c=i-(s-m),m=n[++p]),i=s,c!==0&&(o[P++]=c);d<e&&p<r;)m>f==m>-f?(s=i+f,u=s-i,c=i-(s-u)+(f-u),f=t[++d]):(s=i+m,u=s-i,c=i-(s-u)+(m-u),m=n[++p]),i=s,c!==0&&(o[P++]=c);for(;d<e;)s=i+f,u=s-i,c=i-(s-u)+(f-u),f=t[++d],i=s,c!==0&&(o[P++]=c);for(;p<r;)s=i+m,u=s-i,c=i-(s-u)+(m-u),m=n[++p],i=s,c!==0&&(o[P++]=c);return(i!==0||P===0)&&(o[P++]=i),P}function cr(e,t){let r=t[0];for(let n=1;n<e;n++)r+=t[n];return r}function Pe(e){return new Float64Array(e)}const fr=(3+16*K)*K,hr=(2+12*K)*K,dr=(9+64*K)*K*K,se=Pe(4),tt=Pe(8),rt=Pe(12),nt=Pe(16),D=Pe(4);function pr(e,t,r,n,o,i,s){let c,u,f,m,d,p,P,M,y,L,b,a,l,h,v,g,w,E;const C=e-o,I=r-o,S=t-i,F=n-i;h=C*F,p=A*C,P=p-(p-C),M=C-P,p=A*F,y=p-(p-F),L=F-y,v=M*L-(h-P*y-M*y-P*L),g=S*I,p=A*S,P=p-(p-S),M=S-P,p=A*I,y=p-(p-I),L=I-y,w=M*L-(g-P*y-M*y-P*L),b=v-w,d=v-b,se[0]=v-(b+d)+(d-w),a=h+b,d=a-h,l=h-(a-d)+(b-d),b=l-g,d=l-b,se[1]=l-(b+d)+(d-g),E=a+b,d=E-a,se[2]=a-(E-d)+(b-d),se[3]=E;let O=cr(4,se),T=hr*s;if(O>=T||-O>=T||(d=e-C,c=e-(C+d)+(d-o),d=r-I,f=r-(I+d)+(d-o),d=t-S,u=t-(S+d)+(d-i),d=n-F,m=n-(F+d)+(d-i),c===0&&u===0&&f===0&&m===0)||(T=dr*s+lr*Math.abs(O),O+=C*m+F*c-(S*f+I*u),O>=T||-O>=T))return O;h=c*F,p=A*c,P=p-(p-c),M=c-P,p=A*F,y=p-(p-F),L=F-y,v=M*L-(h-P*y-M*y-P*L),g=u*I,p=A*u,P=p-(p-u),M=u-P,p=A*I,y=p-(p-I),L=I-y,w=M*L-(g-P*y-M*y-P*L),b=v-w,d=v-b,D[0]=v-(b+d)+(d-w),a=h+b,d=a-h,l=h-(a-d)+(b-d),b=l-g,d=l-b,D[1]=l-(b+d)+(d-g),E=a+b,d=E-a,D[2]=a-(E-d)+(b-d),D[3]=E;const N=_e(4,se,4,D,tt);h=C*m,p=A*C,P=p-(p-C),M=C-P,p=A*m,y=p-(p-m),L=m-y,v=M*L-(h-P*y-M*y-P*L),g=S*f,p=A*S,P=p-(p-S),M=S-P,p=A*f,y=p-(p-f),L=f-y,w=M*L-(g-P*y-M*y-P*L),b=v-w,d=v-b,D[0]=v-(b+d)+(d-w),a=h+b,d=a-h,l=h-(a-d)+(b-d),b=l-g,d=l-b,D[1]=l-(b+d)+(d-g),E=a+b,d=E-a,D[2]=a-(E-d)+(b-d),D[3]=E;const R=_e(N,tt,4,D,rt);h=c*m,p=A*c,P=p-(p-c),M=c-P,p=A*m,y=p-(p-m),L=m-y,v=M*L-(h-P*y-M*y-P*L),g=u*f,p=A*u,P=p-(p-u),M=u-P,p=A*f,y=p-(p-f),L=f-y,w=M*L-(g-P*y-M*y-P*L),b=v-w,d=v-b,D[0]=v-(b+d)+(d-w),a=h+b,d=a-h,l=h-(a-d)+(b-d),b=l-g,d=l-b,D[1]=l-(b+d)+(d-g),E=a+b,d=E-a,D[2]=a-(E-d)+(b-d),D[3]=E;const z=_e(R,rt,4,D,nt);return nt[z-1]}function vr(e,t,r,n,o,i){const s=(t-i)*(r-o),c=(e-o)*(n-i),u=s-c;if(s===0||c===0||s>0!=c>0)return u;const f=Math.abs(s+c);return Math.abs(u)>=fr*f?u:-pr(e,t,r,n,o,i,f)}var it=function(t,r,n,o,i){this.p1=t,this.p2=r,this.edgeType=n,this.originalIndex=o,this.polygonContourId=i,this.interiorRing=!1,this.minX=Math.min(t.p[0],r.p[0]),this.minY=Math.min(t.p[1],r.p[1]),this.maxX=Math.max(t.p[0],r.p[0]),this.maxY=Math.max(t.p[1],r.p[1]),this.intersectionPoints=[],this.nextEdge=null},Me=function(t){this.p=t},mr=function(t,r){this.id=t,this.rawCoords=r};function gr(e,t,r,n,o){for(var i=0,s=[],c=t.type==="Feature"?t.geometry:t,u=c.type==="LineString"?[c.coordinates]:c.coordinates,f=0,m=0;m<u.length;m++){for(var d=u[m].length-1,p=new Me(u[m][0]),P=null,M={nextEdge:null},y=0;y<d;y++){P=new Me(u[m][y+1]),p.nextPoint=P,P.prevPoint=p;var L=new it(p,P,"polyline",f,null);n.push(L),M.nextEdge=L,L.prevEdge=M,o[0]=Math.min(o[0],p.p[0]),o[1]=Math.min(o[1],p.p[1]),o[2]=Math.max(o[2],p.p[0]),o[3]=Math.max(o[3],p.p[1]),p=P,f=f+1,M=L}o[0]=Math.min(o[0],u[m][d][0]),o[1]=Math.min(o[1],u[m][d][1]),o[2]=Math.max(o[2],u[m][d][0]),o[3]=Math.max(o[3],u[m][d][1])}for(var b=e.type==="Feature"?e.geometry:e,a=b.type==="Polygon"?[b.coordinates]:b.coordinates,l=a.length,h=0;h<l;h++)for(var v=a[h].length,g=0;g<v;g++){i=i+1;var w=a[h][g],E=w.length;s.push(new mr(i,w));for(var C=new Me(w[0]),I=C,S=void 0,F=null,O={nextEdge:null,prevEdge:null},T=null,N=1;N<E;N++)S=new Me(w[N]),I.nextPoint=S,S.prevPoint=I,F=new it(I,S,"polygon",f,i),O.nextEdge=F,F.prevEdge=O,N===1&&(T=F),g>0&&(F.interiorRing=!0),F.intersectPolylineBbox=yr(F,o),r.push(F),I=S,f=f+1,O=F;F.nextEdge=T,T.prevEdge=F,S.nextPoint=C.nextPoint,C.prevPoint=S.prevPoint}return s}function yr(e,t){return!(e.maxX<t[0]||e.minX>t[2]||e.maxY<t[1]||e.minY>t[3])}var bt=function(t,r,n,o){this.p=t,this.polylineEdge=r,this.polygonEdge=n,this.isHeadingIn=o,this.distanceFromPolylineEdgeStart=ot(this.polylineEdge.p1.p,this.p),this.distanceFromPolygonEdgeStart=ot(this.polygonEdge.p1.p,this.p),this.polygonEdge.intersectionPoints.push(this),this.polylineEdge.intersectionPoints.push(this),this.visitCount=0};bt.prototype.incrementVisitCount=function(){this.visitCount=this.visitCount+1};function ot(e,t){var r=t[0]-e[0],n=t[1]-e[1];return r*=r,n*=n,Math.sqrt(r+n)}function wr(e,t,r){var n,o,i,s=t.length,c=e.length;for(n=0;n<s;n++){var u=t[n];for(o=0;o<c;o++){var f=e[o];if(!!f.intersectPolylineBbox&&!(f.maxX<u.minX||f.minX>u.maxX)&&!(f.maxY<u.minY||f.minY>u.maxY)){var m=Mr(u,f);if(m!==null)for(i=0;i<m.length;i++){var d=vr(f.p1.p[0],f.p1.p[1],f.p2.p[0],f.p2.p[1],u.p1.p[0],u.p1.p[1]),p=new bt(m[i],u,f,d>0);r.push(p)}}}}t.forEach(function(P){P.intersectionPoints.sort(function(M,y){return M.distanceFromPolylineEdgeStart-y.distanceFromPolylineEdgeStart})}),e.forEach(function(P){P.intersectionPoints.sort(function(M,y){return M.distanceFromPolygonEdgeStart-y.distanceFromPolygonEdgeStart})})}var Pr=1e-9;function Ee(e,t){return e[0]*t[1]-e[1]*t[0]}function be(e,t){return e[0]*t[0]+e[1]*t[1]}function ne(e,t,r){return[e[0]+t*r[0],e[1]+t*r[1]]}function Mr(e,t,r){var n=[e.p2.p[0]-e.p1.p[0],e.p2.p[1]-e.p1.p[1]],o=[t.p2.p[0]-t.p1.p[0],t.p2.p[1]-t.p1.p[1]],i=[t.p1.p[0]-e.p1.p[0],t.p1.p[1]-e.p1.p[1]],s=Ee(n,o),c=s*s,u=be(n,n);if(c>0){var f=Ee(i,o)/s;if(f<0||f>1)return null;var m=Ee(i,n)/s;return m<0||m>1?null:f===0||f===1?r?null:[ne(e.p1.p,f,n)]:m===0||m===1?r?null:[ne(t.p1.p,m,o)]:[ne(e.p1.p,f,n)]}var d=be(i,i);if(s=Ee(i,n),c=s*s,c>Pr*u*d)return null;var p=be(n,i)/u,P=p+be(n,o)/u,M=Math.min(p,P),y=Math.max(p,P);return M<=1&&y>=0?M===1?r?null:[ne(e.p1.p,M>0?M:0,n)]:y===0?r?null:[ne(e.p1.p,y<1?y:1,n)]:r&&M===0&&y===1?null:[ne(e.p1.p,M>0?M:0,n),ne(e.p1.p,y<1?y:1,n)]:null}function Er(e,t){var r=sr(e),n=[],o=[],i=[],s=[1/0,1/0,1/0,1/0],c=gr(r,t,o,i,s);if(wr(o,i,n),n.length===0)return e;var u={};c.forEach(function(te){return u[te.id]=0}),n.forEach(function(te){var re=te.polygonEdge.polygonContourId;u[re]=u[re]+1});for(var f=0,m=[],d=null,p=0;p<i.length;p++){var P=i[p];if(P.intersectionPoints.length>0){d=P.intersectionPoints[0];break}}for(var M=d,y={visitCount:1};d!==y&&!(f>n.length*2);){if(f=f++,y.visitCount>=2){for(var L=!1,b=0;b<n.length;b++){var a=n[b];if(a.visitCount<2){M=a,L=!0;break}}if(!L)break}M.visitCount=M.visitCount+1;var l=[];m.push(l),l.push(M.p),M.visitCount=M.visitCount+1;var h=at(M,l);y=h;var v=!1;if(h===y&&n.length===2)for(var g=0;g<n.length;g++){var w=n[g];w.visitCount<2&&(v=!0)}for(;h!==M||v;){var E=h.isHeadingIn?Lr:Ir;h=E(h,l),h!==M&&(h=at(h,l)),v=!1}if(y.visitCount>=2){for(var C=!1,I=0;I<n.length;I++){var S=n[I];if(S.visitCount<2){M=S,C=!0;break}}C&&(y=M)}M=y}for(var F=m.map(function(te){return[te]}),O=Object.keys(u),T=0;T<O.length;T++){var N=O[T],R=u[N];if(R===0){var z=br(o,parseInt(N)),j=Cr(z,c);Sr(j,F)}}return{type:"Feature",properties:{},geometry:{type:"MultiPolygon",coordinates:F}}}function br(e,t){for(var r=0;r<e.length;r++){var n=e[r];if(n.polygonContourId===t)return n}}function Cr(e,t){var r=t.find(function(n){return n.id===e.polygonContourId});return r.rawCoords}function Sr(e,t){for(var r=0;r<t.length;r++){var n=t[r];if(ur(e[0],[n[0]])){n.push(e);return}}t.push([e])}function at(e,t){var r=e.polygonEdge;if(r.intersectionPoints.length>1){var n=r.intersectionPoints[r.intersectionPoints.length-1];if(n!==e){var o=qe(e,r.intersectionPoints),i=r.intersectionPoints[o+1];return t.push(i.p),i.incrementVisitCount(),i}}for(var s=!0;s;){if(t.push(r.p2.p),r=r.nextEdge,r===null)return e;r.intersectionPoints.length>0&&(s=!1)}return r.intersectionPoints[0].incrementVisitCount(),t.push(r.intersectionPoints[0].p),r.intersectionPoints[0]}function qe(e,t){for(var r=0;r<t.length;r++){var n=t[r];if(n===e)return r}return null}function Ir(e,t){var r=e.polylineEdge;if(r.intersectionPoints.length===2){var n=r.intersectionPoints[r.intersectionPoints.length-1];if(n===e){var o=r.intersectionPoints[0];return t.push(o.p),o.incrementVisitCount(),o}else return t.push(n.p),n.incrementVisitCount(),n}else if(r.intersectionPoints.length>2){var i=r.intersectionPoints[0];if(i!==e){var s=qe(e,r.intersectionPoints),c=r.intersectionPoints[s-1];return t.push(c.p),c.incrementVisitCount(),c}}for(var u=!0;u;){if(t.push(r.p1.p),r=r.prevEdge,r.originalIndex===void 0)return e;r.intersectionPoints.length>0&&(u=!1)}if(r.originalIndex===void 0)return e;var f=r.intersectionPoints[r.intersectionPoints.length-1];return f.incrementVisitCount(),t.push(f.p),f}function Lr(e,t){var r=e.polylineEdge;if(r.intersectionPoints.length>1){var n=r.intersectionPoints[r.intersectionPoints.length-1];if(n!==e){var o=qe(e,r.intersectionPoints),i=r.intersectionPoints[o+1];return t.push(i.p),i.incrementVisitCount(),i}}for(var s=!0;s;){if(t.push(r.p2.p),r=r.nextEdge,r===null)return e;r.intersectionPoints.length>0&&(s=!1)}if(r===void 0)return e;var c=r.intersectionPoints[0];return c.incrementVisitCount(),t.push(c.p),c}const k={ADD:"add",MOVE:"move",DRAG:"drag",POINTER:"pointer",NONE:"none"},We={POLYGON:"polygon",LINE:"line_string",POINT:"point"},B={FEATURE:"Feature",POLYGON:"Polygon",LINE_STRING:"LineString",POINT:"Point",FEATURE_COLLECTION:"FeatureCollection",MULTI_PREFIX:"Multi",MULTI_POINT:"MultiPoint",MULTI_LINE_STRING:"MultiLineString",MULTI_POLYGON:"MultiPolygon"},x={DRAW_LINE_STRING:"draw_line_string",DRAW_POLYGON:"draw_polygon",DRAW_POINT:"draw_point",SIMPLE_SELECT:"simple_select",DIRECT_SELECT:"direct_select",STATIC:"static"},Fe={CREATE:"draw.create",DELETE:"draw.delete",UPDATE:"draw.update",SELECTION_CHANGE:"draw.selectionchange",MODE_CHANGE:"draw.modechange",ACTIONABLE:"draw.actionable",RENDER:"draw.render",COMBINE_FEATURES:"draw.combine",UNCOMBINE_FEATURES:"draw.uncombine"},Oe={FEATURE:"feature",MIDPOINT:"midpoint",VERTEX:"vertex"},ee={ACTIVE:"true",INACTIVE:"false"};function st(e){if(!e)throw new Error("geojson is required");var t=[];return oe(e,function(r){Fr(r,t)}),H(t)}function Fr(e,t){var r=[],n=e.geometry;if(n!==null){switch(n.type){case"Polygon":r=q(n);break;case"LineString":r=[q(n)]}r.forEach(function(o){var i=Or(o,e.properties);i.forEach(function(s){s.id=t.length,t.push(s)})})}}function Or(e,t){var r=[];return e.reduce(function(n,o){var i=U([n,o],t);return i.bbox=Tr(n,o),r.push(i),o}),r}function Tr(e,t){var r=e[0],n=e[1],o=t[0],i=t[1],s=r<o?r:o,c=n<i?n:i,u=r>o?r:o,f=n>i?n:i;return[s,c,u,f]}var xr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Qe(e){var t=e.default;if(typeof t=="function"){var r=function(){return t.apply(this,arguments)};r.prototype=t.prototype}else r={};return Object.defineProperty(r,"__esModule",{value:!0}),Object.keys(e).forEach(function(n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(r,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}),r}var Ke={exports:{}},Ct={exports:{}};(function(e,t){(function(r,n){e.exports=n()})(xr,function(){function r(a,l,h,v,g){(function w(E,C,I,S,F){for(;S>I;){if(S-I>600){var O=S-I+1,T=C-I+1,N=Math.log(O),R=.5*Math.exp(2*N/3),z=.5*Math.sqrt(N*R*(O-R)/O)*(T-O/2<0?-1:1),j=Math.max(I,Math.floor(C-T*R/O+z)),te=Math.min(S,Math.floor(C+(O-T)*R/O+z));w(E,C,j,te,F)}var re=E[C],pe=I,V=S;for(n(E,I,C),F(E[S],re)>0&&n(E,I,S);pe<V;){for(n(E,pe,V),pe++,V--;F(E[pe],re)<0;)pe++;for(;F(E[V],re)>0;)V--}F(E[I],re)===0?n(E,I,V):n(E,++V,S),V<=C&&(I=V+1),C<=V&&(S=V-1)}})(a,l,h||0,v||a.length-1,g||o)}function n(a,l,h){var v=a[l];a[l]=a[h],a[h]=v}function o(a,l){return a<l?-1:a>l?1:0}var i=function(a){a===void 0&&(a=9),this._maxEntries=Math.max(4,a),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function s(a,l,h){if(!h)return l.indexOf(a);for(var v=0;v<l.length;v++)if(h(a,l[v]))return v;return-1}function c(a,l){u(a,0,a.children.length,l,a)}function u(a,l,h,v,g){g||(g=L(null)),g.minX=1/0,g.minY=1/0,g.maxX=-1/0,g.maxY=-1/0;for(var w=l;w<h;w++){var E=a.children[w];f(g,a.leaf?v(E):E)}return g}function f(a,l){return a.minX=Math.min(a.minX,l.minX),a.minY=Math.min(a.minY,l.minY),a.maxX=Math.max(a.maxX,l.maxX),a.maxY=Math.max(a.maxY,l.maxY),a}function m(a,l){return a.minX-l.minX}function d(a,l){return a.minY-l.minY}function p(a){return(a.maxX-a.minX)*(a.maxY-a.minY)}function P(a){return a.maxX-a.minX+(a.maxY-a.minY)}function M(a,l){return a.minX<=l.minX&&a.minY<=l.minY&&l.maxX<=a.maxX&&l.maxY<=a.maxY}function y(a,l){return l.minX<=a.maxX&&l.minY<=a.maxY&&l.maxX>=a.minX&&l.maxY>=a.minY}function L(a){return{children:a,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function b(a,l,h,v,g){for(var w=[l,h];w.length;)if(!((h=w.pop())-(l=w.pop())<=v)){var E=l+Math.ceil((h-l)/v/2)*v;r(a,E,l,h,g),w.push(l,E,E,h)}}return i.prototype.all=function(){return this._all(this.data,[])},i.prototype.search=function(a){var l=this.data,h=[];if(!y(a,l))return h;for(var v=this.toBBox,g=[];l;){for(var w=0;w<l.children.length;w++){var E=l.children[w],C=l.leaf?v(E):E;y(a,C)&&(l.leaf?h.push(E):M(a,C)?this._all(E,h):g.push(E))}l=g.pop()}return h},i.prototype.collides=function(a){var l=this.data;if(!y(a,l))return!1;for(var h=[];l;){for(var v=0;v<l.children.length;v++){var g=l.children[v],w=l.leaf?this.toBBox(g):g;if(y(a,w)){if(l.leaf||M(a,w))return!0;h.push(g)}}l=h.pop()}return!1},i.prototype.load=function(a){if(!a||!a.length)return this;if(a.length<this._minEntries){for(var l=0;l<a.length;l++)this.insert(a[l]);return this}var h=this._build(a.slice(),0,a.length-1,0);if(this.data.children.length)if(this.data.height===h.height)this._splitRoot(this.data,h);else{if(this.data.height<h.height){var v=this.data;this.data=h,h=v}this._insert(h,this.data.height-h.height-1,!0)}else this.data=h;return this},i.prototype.insert=function(a){return a&&this._insert(a,this.data.height-1),this},i.prototype.clear=function(){return this.data=L([]),this},i.prototype.remove=function(a,l){if(!a)return this;for(var h,v,g,w=this.data,E=this.toBBox(a),C=[],I=[];w||C.length;){if(w||(w=C.pop(),v=C[C.length-1],h=I.pop(),g=!0),w.leaf){var S=s(a,w.children,l);if(S!==-1)return w.children.splice(S,1),C.push(w),this._condense(C),this}g||w.leaf||!M(w,E)?v?(h++,w=v.children[h],g=!1):w=null:(C.push(w),I.push(h),h=0,v=w,w=w.children[0])}return this},i.prototype.toBBox=function(a){return a},i.prototype.compareMinX=function(a,l){return a.minX-l.minX},i.prototype.compareMinY=function(a,l){return a.minY-l.minY},i.prototype.toJSON=function(){return this.data},i.prototype.fromJSON=function(a){return this.data=a,this},i.prototype._all=function(a,l){for(var h=[];a;)a.leaf?l.push.apply(l,a.children):h.push.apply(h,a.children),a=h.pop();return l},i.prototype._build=function(a,l,h,v){var g,w=h-l+1,E=this._maxEntries;if(w<=E)return c(g=L(a.slice(l,h+1)),this.toBBox),g;v||(v=Math.ceil(Math.log(w)/Math.log(E)),E=Math.ceil(w/Math.pow(E,v-1))),(g=L([])).leaf=!1,g.height=v;var C=Math.ceil(w/E),I=C*Math.ceil(Math.sqrt(E));b(a,l,h,I,this.compareMinX);for(var S=l;S<=h;S+=I){var F=Math.min(S+I-1,h);b(a,S,F,C,this.compareMinY);for(var O=S;O<=F;O+=C){var T=Math.min(O+C-1,F);g.children.push(this._build(a,O,T,v-1))}}return c(g,this.toBBox),g},i.prototype._chooseSubtree=function(a,l,h,v){for(;v.push(l),!l.leaf&&v.length-1!==h;){for(var g=1/0,w=1/0,E=void 0,C=0;C<l.children.length;C++){var I=l.children[C],S=p(I),F=(O=a,T=I,(Math.max(T.maxX,O.maxX)-Math.min(T.minX,O.minX))*(Math.max(T.maxY,O.maxY)-Math.min(T.minY,O.minY))-S);F<w?(w=F,g=S<g?S:g,E=I):F===w&&S<g&&(g=S,E=I)}l=E||l.children[0]}var O,T;return l},i.prototype._insert=function(a,l,h){var v=h?a:this.toBBox(a),g=[],w=this._chooseSubtree(v,this.data,l,g);for(w.children.push(a),f(w,v);l>=0&&g[l].children.length>this._maxEntries;)this._split(g,l),l--;this._adjustParentBBoxes(v,g,l)},i.prototype._split=function(a,l){var h=a[l],v=h.children.length,g=this._minEntries;this._chooseSplitAxis(h,g,v);var w=this._chooseSplitIndex(h,g,v),E=L(h.children.splice(w,h.children.length-w));E.height=h.height,E.leaf=h.leaf,c(h,this.toBBox),c(E,this.toBBox),l?a[l-1].children.push(E):this._splitRoot(h,E)},i.prototype._splitRoot=function(a,l){this.data=L([a,l]),this.data.height=a.height+1,this.data.leaf=!1,c(this.data,this.toBBox)},i.prototype._chooseSplitIndex=function(a,l,h){for(var v,g,w,E,C,I,S,F=1/0,O=1/0,T=l;T<=h-l;T++){var N=u(a,0,T,this.toBBox),R=u(a,T,h,this.toBBox),z=(g=N,w=R,E=void 0,C=void 0,I=void 0,S=void 0,E=Math.max(g.minX,w.minX),C=Math.max(g.minY,w.minY),I=Math.min(g.maxX,w.maxX),S=Math.min(g.maxY,w.maxY),Math.max(0,I-E)*Math.max(0,S-C)),j=p(N)+p(R);z<F?(F=z,v=T,O=j<O?j:O):z===F&&j<O&&(O=j,v=T)}return v||h-l},i.prototype._chooseSplitAxis=function(a,l,h){var v=a.leaf?this.compareMinX:m,g=a.leaf?this.compareMinY:d;this._allDistMargin(a,l,h,v)<this._allDistMargin(a,l,h,g)&&a.children.sort(v)},i.prototype._allDistMargin=function(a,l,h,v){a.children.sort(v);for(var g=this.toBBox,w=u(a,0,l,g),E=u(a,h-l,h,g),C=P(w)+P(E),I=l;I<h-l;I++){var S=a.children[I];f(w,a.leaf?g(S):S),C+=P(w)}for(var F=h-l-1;F>=l;F--){var O=a.children[F];f(E,a.leaf?g(O):O),C+=P(E)}return C},i.prototype._adjustParentBBoxes=function(a,l,h){for(var v=h;v>=0;v--)f(l[v],a)},i.prototype._condense=function(a){for(var l=a.length-1,h=void 0;l>=0;l--)a[l].children.length===0?l>0?(h=a[l-1].children).splice(h.indexOf(a[l]),1):this.clear():c(a[l],this.toBBox)},i})})(Ct);const Ar=Qe(Wt),_r=Qe(ar);function Ye(e){var t=[1/0,1/0,-1/0,-1/0];return he(e,function(r){t[0]>r[0]&&(t[0]=r[0]),t[1]>r[1]&&(t[1]=r[1]),t[2]<r[0]&&(t[2]=r[0]),t[3]<r[1]&&(t[3]=r[1])}),t}Ye.default=Ye;const Nr=Object.freeze(Object.defineProperty({__proto__:null,default:Ye},Symbol.toStringTag,{value:"Module"})),Dr=Qe(Nr);var J=Ct.exports,St=Ar,It=_r,ue=Dr.default,kr=It.featureEach;It.coordEach;St.polygon;var ut=St.featureCollection;function Lt(e){var t=new J(e);return t.insert=function(r){if(r.type!=="Feature")throw new Error("invalid feature");return r.bbox=r.bbox?r.bbox:ue(r),J.prototype.insert.call(this,r)},t.load=function(r){var n=[];return Array.isArray(r)?r.forEach(function(o){if(o.type!=="Feature")throw new Error("invalid features");o.bbox=o.bbox?o.bbox:ue(o),n.push(o)}):kr(r,function(o){if(o.type!=="Feature")throw new Error("invalid features");o.bbox=o.bbox?o.bbox:ue(o),n.push(o)}),J.prototype.load.call(this,n)},t.remove=function(r,n){if(r.type!=="Feature")throw new Error("invalid feature");return r.bbox=r.bbox?r.bbox:ue(r),J.prototype.remove.call(this,r,n)},t.clear=function(){return J.prototype.clear.call(this)},t.search=function(r){var n=J.prototype.search.call(this,this.toBBox(r));return ut(n)},t.collides=function(r){return J.prototype.collides.call(this,this.toBBox(r))},t.all=function(){var r=J.prototype.all.call(this);return ut(r)},t.toJSON=function(){return J.prototype.toJSON.call(this)},t.fromJSON=function(r){return J.prototype.fromJSON.call(this,r)},t.toBBox=function(r){var n;if(r.bbox)n=r.bbox;else if(Array.isArray(r)&&r.length===4)n=r;else if(Array.isArray(r)&&r.length===6)n=[r[0],r[1],r[3],r[4]];else if(r.type==="Feature")n=ue(r);else if(r.type==="FeatureCollection")n=ue(r);else throw new Error("invalid geojson");return{minX:n[0],minY:n[1],maxX:n[2],maxY:n[3]}},t}Ke.exports=Lt;Ke.exports.default=Lt;function $e(e,t){var r={},n=[];if(e.type==="LineString"&&(e=Y(e)),t.type==="LineString"&&(t=Y(t)),e.type==="Feature"&&t.type==="Feature"&&e.geometry!==null&&t.geometry!==null&&e.geometry.type==="LineString"&&t.geometry.type==="LineString"&&e.geometry.coordinates.length===2&&t.geometry.coordinates.length===2){var o=lt(e,t);return o&&n.push(o),H(n)}var i=Ke.exports();return i.load(st(t)),fe(st(e),function(s){fe(i.search(s),function(c){var u=lt(s,c);if(u){var f=q(u).join(",");r[f]||(r[f]=!0,n.push(u))}})}),H(n)}function lt(e,t){var r=q(e),n=q(t);if(r.length!==2)throw new Error("<intersects> line1 must only contain 2 coordinates");if(n.length!==2)throw new Error("<intersects> line2 must only contain 2 coordinates");var o=r[0][0],i=r[0][1],s=r[1][0],c=r[1][1],u=n[0][0],f=n[0][1],m=n[1][0],d=n[1][1],p=(d-f)*(s-o)-(m-u)*(c-i),P=(m-u)*(i-f)-(d-f)*(o-u),M=(s-o)*(i-f)-(c-i)*(o-u);if(p===0)return P===0&&M===0,null;var y=P/p,L=M/p;if(y>=0&&y<=1&&L>=0&&L<=1){var b=o+y*(s-o),a=i+y*(c-i);return Z([b,a])}return null}function ge(e,t,r){if(r===void 0&&(r={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var n=Qt(e),o=Le(t),i=o.type,s=t.bbox,c=o.coordinates;if(s&&Yr(n,s)===!1)return!1;i==="Polygon"&&(c=[c]);for(var u=!1,f=0;f<c.length&&!u;f++)if(ct(n,c[f][0],r.ignoreBoundary)){for(var m=!1,d=1;d<c[f].length&&!m;)ct(n,c[f][d],!r.ignoreBoundary)&&(m=!0),d++;m||(u=!0)}return u}function ct(e,t,r){var n=!1;t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]&&(t=t.slice(0,t.length-1));for(var o=0,i=t.length-1;o<t.length;i=o++){var s=t[o][0],c=t[o][1],u=t[i][0],f=t[i][1],m=e[1]*(s-u)+c*(u-e[0])+f*(e[0]-s)===0&&(s-e[0])*(u-e[0])<=0&&(c-e[1])*(f-e[1])<=0;if(m)return!r;var d=c>e[1]!=f>e[1]&&e[0]<(u-s)*(e[1]-c)/(f-c)+s;d&&(n=!n)}return n}function Yr(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}function Be(e,t){t===void 0&&(t={});var r=Le(e);switch(!t.properties&&e.type==="Feature"&&(t.properties=e.properties),r.type){case"Polygon":return Br(r,t);case"MultiPolygon":return Rr(r,t);default:throw new Error("invalid poly")}}function Br(e,t){t===void 0&&(t={});var r=Le(e),n=r.coordinates,o=t.properties?t.properties:e.type==="Feature"?e.properties:{};return Ft(n,o)}function Rr(e,t){t===void 0&&(t={});var r=Le(e),n=r.coordinates,o=t.properties?t.properties:e.type==="Feature"?e.properties:{},i=[];return n.forEach(function(s){i.push(Ft(s,o))}),H(i)}function Ft(e,t){return e.length>1?Je(e,t):U(e[0],t)}function Vr(e,t){var r=!0;return oe(e,function(n){oe(t,function(o){if(r===!1)return!1;r=Ur(n.geometry,o.geometry)})}),r}function Ur(e,t){switch(e.type){case"Point":switch(t.type){case"Point":return!Jr(e.coordinates,t.coordinates);case"LineString":return!ft(t,e);case"Polygon":return!ge(e,t)}break;case"LineString":switch(t.type){case"Point":return!ft(e,t);case"LineString":return!Xr(e,t);case"Polygon":return!ht(t,e)}break;case"Polygon":switch(t.type){case"Point":return!ge(t,e);case"LineString":return!ht(e,t);case"Polygon":return!Gr(t,e)}}return!1}function ft(e,t){for(var r=0;r<e.coordinates.length-1;r++)if(zr(e.coordinates[r],e.coordinates[r+1],t.coordinates))return!0;return!1}function Xr(e,t){var r=$e(e,t);return r.features.length>0}function ht(e,t){for(var r=0,n=t.coordinates;r<n.length;r++){var o=n[r];if(ge(o,e))return!0}var i=$e(t,Be(e));return i.features.length>0}function Gr(e,t){for(var r=0,n=e.coordinates[0];r<n.length;r++){var o=n[r];if(ge(o,t))return!0}for(var i=0,s=t.coordinates[0];i<s.length;i++){var c=s[i];if(ge(c,e))return!0}var u=$e(Be(e),Be(t));return u.features.length>0}function zr(e,t,r){var n=r[0]-e[0],o=r[1]-e[1],i=t[0]-e[0],s=t[1]-e[1],c=n*s-o*i;return c!==0?!1:Math.abs(i)>=Math.abs(s)?i>0?e[0]<=r[0]&&r[0]<=t[0]:t[0]<=r[0]&&r[0]<=e[0]:s>0?e[1]<=r[1]&&r[1]<=t[1]:t[1]<=r[1]&&r[1]<=e[1]}function Jr(e,t){return e[0]===t[0]&&e[1]===t[1]}const ye="split_polygon",Ot=`${ye}_passing_draw_line_string`,Re=`${ye}_highlight`,Ne={highlightColor:"#222",lineWidth:.001,lineWidthUnit:"kilometers"},$={};$.onSetup=function(e){const{highlightColor:t=Ne.highlightColor,lineWidth:r=Ne.lineWidth,lineWidthUnit:n=Ne.lineWidthUnit}=e||{},o={options:{highlightColor:t},selectedFeatures:null};return setTimeout(this.magick.bind(this,o),0),console.log("SplitPolygonMode.onSetup"),o};$.magick=function(e){console.log("SplitPolygonMode.magick");const t=this.getSelected().filter(o=>o.type===B.POLYGON||o.type===B.MULTI_POLYGON).map(o=>o.toGeoJSON());e.selectedFeatures=t;const r=this._ctx.api,n=this;t.length===0?this.changeMode("select_feature",{onSelect(o){const i=r.get(o);t.push(i),console.log("\u{1F680} ~ file: mode.js ~ line 64 ~ onSelect ~ onSelect"),$.drawAndSplit.call(n,e)}}):$.drawAndSplit.call(n,e)};$.drawAndSplit=function(e){console.log("\u{1F680} ~ file: mode.js ~ line 75 ~ drawAndSplit ~ state",e);const t=this._ctx.api;try{this.changeMode(Ot,{onDraw:r=>{var o,i;console.log("\u{1F680} ~ file: mode.js ~ line 81 ~ cuttingLineString",r);const n=[];e.selectedFeatures.forEach(s=>{if(Vr(s,r))throw new Error("Line must be outside of Polygon");{const c=Zr(s.geometry,r.geometry,{});c.id=s.id,t.add(c),n.push(c)}}),this.fireUpdate(n),(i=(o=e.selectedFeatures)==null?void 0:o[0])!=null&&i.id&&t.setFeatureProperty(e.selectedFeatures[0].id,Re,void 0)},onCancel:()=>{var r,n;(n=(r=e.selectedFeatures)==null?void 0:r[0])!=null&&n.id&&t.setFeatureProperty(e.selectedFeatures[0].id,Re,void 0)}})}catch(r){console.log("\u{1F680} ~ file: mode.js ~ line 116 ~ err",r)}};$.toDisplayFeatures=function(e,t,r){r(t)};$.fireUpdate=function(e){this.map.fire(Fe.UPDATE,{action:"SplitPolygon",features:e})};$.onStop=function(e){console.log("\u{1F680} ~ file: mode.js ~ line 60 ~ onStop ~ state",e)};function Zr(e,t){return Er(e,t)}const de={enable(e){setTimeout(()=>{!e.map||!e.map.doubleClickZoom||!e._ctx||!e._ctx.store||!e._ctx.store.getInitialConfigValue||!e._ctx.store.getInitialConfigValue("doubleClickZoom")||e.map.doubleClickZoom.enable()},0)},disable(e){setTimeout(()=>{!e.map||!e.map.doubleClickZoom||e.map.doubleClickZoom.disable()},0)}};function Te(e){const t=e.featureTarget;return!t||!t.properties?!1:t.properties.meta===Oe.VERTEX}function xe(e){return e.keyCode===27}function He(e){return e.keyCode===13}const ce="select_feature",me=`${ce}_highlight`,qr={highlightColor:"#222"},ae={};ae.onSetup=function(e){const{selectHighlightColor:t,onSelect:r,onCancel:n}=e,o={};o.hoveredFeatureID=null,o.selectedFeatureID=null,o.onSelect=r,o.onCancel=n,o.api=this._ctx.api;const{selectHighlightColor:i=qr.highlightColor}=this._ctx.options;return o.options={selectHighlightColor:t||i},o};ae.onMouseMove=function(e,t){const{api:r}=e,{featureTarget:n}=t;if(n){this.updateUIClasses({mouse:k.POINTER});const o=n.properties.id;e.hoveredFeatureID!==null&&e.hoveredFeatureID!==o&&r.setFeatureProperty(e.hoveredFeatureID,me,void 0),e.hoveredFeatureID=o,r.setFeatureProperty(e.hoveredFeatureID,me,e.options.selectHighlightColor)}else e.hoveredFeatureID&&r.setFeatureProperty(e.hoveredFeatureID,me,void 0),e.hoveredFeatureID=null};ae.onClick=function(e,t){e.selectedFeatureID=e.hoveredFeatureID,this.onStop(e,t)};ae.toDisplayFeatures=function(e,t,r){r(t)};ae.onKeyUp=function(e,t){xe(t)&&this.changeMode(x.SIMPLE_SELECT)};ae.onStop=function(e){this.updateUIClasses({mouse:k.NONE}),de.enable(this),this.activateUIButton(),e.selectedFeatureID?(typeof e.onSelect=="function"?e.onSelect(e.selectedFeatureID):this.map.fire("draw.select_mode.select",{featureID:e.selectedFeatureID}),e.selectedFeatureID=null,this.changeMode(x.SIMPLE_SELECT,{},{silent:!0})):typeof e.onCancel=="function"&&e.onCancel(),e.hoveredFeatureID&&(this._ctx.api.setFeatureProperty(e.hoveredFeatureID,me,void 0),e.hoveredFeatureID=null)};const Q=`user_${me}`,Wr=e=>e.concat([{id:`${ce}-fill`,type:"fill",filter:["all",["==","$type","Polygon"],["has",Q]],paint:{"fill-color":["get",Q],"fill-outline-color":["get",Q],"fill-opacity":.2}},{id:`${ce}-stroke`,type:"line",filter:["all",["==","$type","Polygon"],["has",Q]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":["get",Q],"line-dasharray":[.2,2],"line-width":2}},{id:`${ce}-line`,type:"line",filter:["all",["==","$type","LineString"],["has",Q]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":["get",Q],"line-dasharray":[.2,2],"line-width":2}},{id:`${ce}-point`,type:"circle",filter:["all",["==","$type","Point"],["has",Q]],paint:{"circle-color":["get",Q],"circle-radius":3}}]);function Qr(e){return{...e,[ce]:ae}}const le=`user_${Re}`,Kr=e=>Wr(e).map(t=>t.id.endsWith("inactive")?{...t,filter:[...t.filter,["!has",le]]}:t).concat([{id:`${ye}-fill-active`,type:"fill",filter:["all",["==","active","false"],["==","$type","Polygon"],["has",le]],paint:{"fill-color":["get",le],"fill-outline-color":["get",le],"fill-opacity":.1}},{id:`${ye}-stroke-active`,type:"line",filter:["all",["==","active","false"],["==","$type","Polygon"],["has",le]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":["get",le],"line-dasharray":[.2,2],"line-width":2}}]),W={};W.onSetup=function(){const e=this.newFeature({type:B.FEATURE,properties:{},geometry:{type:B.POINT,coordinates:[]}});return this.addFeature(e),this.clearSelectedFeatures(),this.updateUIClasses({mouse:k.ADD}),this.activateUIButton(We.POINT),this.setActionableState({trash:!0}),{point:e}};W.stopDrawingAndRemove=function(e){this.deleteFeature([e.point.id],{silent:!0}),this.changeMode(x.SIMPLE_SELECT)};W.onTap=W.onClick=function(e,t){this.updateUIClasses({mouse:k.MOVE}),e.point.updateCoordinate("",t.lngLat.lng,t.lngLat.lat),this.map.fire(Fe.CREATE,{features:[e.point.toGeoJSON()]}),this.changeMode(x.SIMPLE_SELECT,{featureIds:[e.point.id]})};W.onStop=function(e){this.activateUIButton(),e.point.getCoordinate().length||this.deleteFeature([e.point.id],{silent:!0})};W.toDisplayFeatures=function(e,t,r){const n=t.properties.id===e.point.id;if(t.properties.active=n?ee.ACTIVE:ee.INACTIVE,!n)return r(t)};W.onTrash=W.stopDrawingAndRemove;W.onKeyUp=function(e,t){if(xe(t)||He(t))return this.stopDrawingAndRemove(e,t)};const{onSetup:$r,onClick:Hr,...jr}=W;({...jr});function Ve(e,t){return e.lngLat?e.lngLat.lng===t[0]&&e.lngLat.lat===t[1]:!1}function Ue(e,t,r,n){return{type:B.FEATURE,properties:{meta:Oe.VERTEX,parent:e,coord_path:r,active:n?ee.ACTIVE:ee.INACTIVE},geometry:{type:B.POINT,coordinates:t}}}const X={};X.onSetup=function(e){e=e||{};const t=e.featureId;let r,n,o="forward";if(t){if(r=this.getFeature(t),!r)throw new Error("Could not find a feature with the provided featureId");let i=e.from;if(i&&i.type==="Feature"&&i.geometry&&i.geometry.type==="Point"&&(i=i.geometry),i&&i.type==="Point"&&i.coordinates&&i.coordinates.length===2&&(i=i.coordinates),!i||!Array.isArray(i))throw new Error("Please use the `from` property to indicate which point to continue the line from");const s=r.coordinates.length-1;if(r.coordinates[s][0]===i[0]&&r.coordinates[s][1]===i[1])n=s+1,r.addCoordinate(n,...r.coordinates[s]);else if(r.coordinates[0][0]===i[0]&&r.coordinates[0][1]===i[1])o="backwards",n=0,r.addCoordinate(n,...r.coordinates[0]);else throw new Error("`from` should match the point at either the start or the end of the provided LineString")}else r=this.newFeature({type:B.FEATURE,properties:{},geometry:{type:B.LINE_STRING,coordinates:[]}}),n=0,this.addFeature(r);return this.clearSelectedFeatures(),de.disable(this),this.updateUIClasses({mouse:k.ADD}),this.activateUIButton(We.LINE),this.setActionableState({trash:!0}),{line:r,currentVertexPosition:n,direction:o}};X.clickAnywhere=function(e,t){if(e.currentVertexPosition>0&&Ve(t,e.line.coordinates[e.currentVertexPosition-1])||e.direction==="backwards"&&Ve(t,e.line.coordinates[e.currentVertexPosition+1]))return this.changeMode(x.SIMPLE_SELECT,{featureIds:[e.line.id]});this.updateUIClasses({mouse:k.ADD}),e.line.updateCoordinate(e.currentVertexPosition,t.lngLat.lng,t.lngLat.lat),e.direction==="forward"?(e.currentVertexPosition++,e.line.updateCoordinate(e.currentVertexPosition,t.lngLat.lng,t.lngLat.lat)):e.line.addCoordinate(0,t.lngLat.lng,t.lngLat.lat)};X.clickOnVertex=function(e){return this.changeMode(x.SIMPLE_SELECT,{featureIds:[e.line.id]})};X.onMouseMove=function(e,t){e.line.updateCoordinate(e.currentVertexPosition,t.lngLat.lng,t.lngLat.lat),Te(t)&&this.updateUIClasses({mouse:k.POINTER})};X.onTap=X.onClick=function(e,t){if(Te(t))return this.clickOnVertex(e,t);this.clickAnywhere(e,t)};X.onKeyUp=function(e,t){He(t)?this.changeMode(x.SIMPLE_SELECT,{featureIds:[e.line.id]}):xe(t)&&(this.deleteFeature([e.line.id],{silent:!0}),this.changeMode(x.SIMPLE_SELECT))};X.onStop=function(e){de.enable(this),this.activateUIButton(),this.getFeature(e.line.id)!==void 0&&(e.line.removeCoordinate(`${e.currentVertexPosition}`),e.line.isValid()?this.map.fire(Fe.CREATE,{features:[e.line.toGeoJSON()]}):(this.deleteFeature([e.line.id],{silent:!0}),this.changeMode(x.SIMPLE_SELECT,{},{silent:!0})))};X.onTrash=function(e){this.deleteFeature([e.line.id],{silent:!0}),this.changeMode(x.SIMPLE_SELECT)};X.toDisplayFeatures=function(e,t,r){const n=t.properties.id===e.line.id;if(t.properties.active=n?ee.ACTIVE:ee.INACTIVE,!n)return r(t);t.geometry.coordinates.length<2||(t.properties.meta=Oe.FEATURE,r(Ue(e.line.id,t.geometry.coordinates[e.direction==="forward"?t.geometry.coordinates.length-2:1],`${e.direction==="forward"?t.geometry.coordinates.length-2:1}`,!1)),r(t))};const{onSetup:en,onMouseMove:tn,...rn}=X,Ae={originOnSetup:en,originOnMouseMove:tn,...rn};Ae.onSetup=function(e){const t=this.originOnSetup(),{onDraw:r,onCancel:n}=e;return t.onDraw=r,t.onCancel=n,t};Ae.onMouseMove=function(e,t){this.updateUIClasses({mouse:k.ADD}),this.originOnMouseMove(e,t)};Ae.onStop=function(e){const t=e.line;if(this.updateUIClasses({mouse:k.NONE}),de.enable(this),this.activateUIButton(),this.getFeature(t.id)===void 0){typeof e.onCancel=="function"&&e.onCancel();return}else t.removeCoordinate(`${e.currentVertexPosition}`);t.isValid()&&(typeof e.onDraw=="function"?e.onDraw(t.toGeoJSON()):this.map.fire("draw.passing-create",{features:[t.toGeoJSON()]})),this.deleteFeature([t.id],{silent:!0}),this.changeMode(x.SIMPLE_SELECT,{},{silent:!0})};const G={};G.onSetup=function(){const e=this.newFeature({type:B.FEATURE,properties:{},geometry:{type:B.POLYGON,coordinates:[[]]}});return this.addFeature(e),this.clearSelectedFeatures(),de.disable(this),this.updateUIClasses({mouse:k.ADD}),this.activateUIButton(We.POLYGON),this.setActionableState({trash:!0}),{polygon:e,currentVertexPosition:0}};G.clickAnywhere=function(e,t){if(e.currentVertexPosition>0&&Ve(t,e.polygon.coordinates[0][e.currentVertexPosition-1]))return this.changeMode(x.SIMPLE_SELECT,{featureIds:[e.polygon.id]});this.updateUIClasses({mouse:k.ADD}),e.polygon.updateCoordinate(`0.${e.currentVertexPosition}`,t.lngLat.lng,t.lngLat.lat),e.currentVertexPosition++,e.polygon.updateCoordinate(`0.${e.currentVertexPosition}`,t.lngLat.lng,t.lngLat.lat)};G.clickOnVertex=function(e){return this.changeMode(x.SIMPLE_SELECT,{featureIds:[e.polygon.id]})};G.onMouseMove=function(e,t){e.polygon.updateCoordinate(`0.${e.currentVertexPosition}`,t.lngLat.lng,t.lngLat.lat),Te(t)&&this.updateUIClasses({mouse:k.POINTER})};G.onTap=G.onClick=function(e,t){return Te(t)?this.clickOnVertex(e,t):this.clickAnywhere(e,t)};G.onKeyUp=function(e,t){xe(t)?(this.deleteFeature([e.polygon.id],{silent:!0}),this.changeMode(x.SIMPLE_SELECT)):He(t)&&this.changeMode(x.SIMPLE_SELECT,{featureIds:[e.polygon.id]})};G.onStop=function(e){this.updateUIClasses({mouse:k.NONE}),de.enable(this),this.activateUIButton(),this.getFeature(e.polygon.id)!==void 0&&(e.polygon.removeCoordinate(`0.${e.currentVertexPosition}`),e.polygon.isValid()?this.map.fire(Fe.CREATE,{features:[e.polygon.toGeoJSON()]}):(this.deleteFeature([e.polygon.id],{silent:!0}),this.changeMode(x.SIMPLE_SELECT,{},{silent:!0})))};G.toDisplayFeatures=function(e,t,r){const n=t.properties.id===e.polygon.id;if(t.properties.active=n?ee.ACTIVE:ee.INACTIVE,!n)return r(t);if(t.geometry.coordinates.length===0)return;const o=t.geometry.coordinates[0].length;if(!(o<3)){if(t.properties.meta=Oe.FEATURE,r(Ue(e.polygon.id,t.geometry.coordinates[0][0],"0.0",!1)),o>3){const i=t.geometry.coordinates[0].length-3;r(Ue(e.polygon.id,t.geometry.coordinates[0][i],`0.${i}`,!1))}if(o<=4){const i=[[t.geometry.coordinates[0][0][0],t.geometry.coordinates[0][0][1]],[t.geometry.coordinates[0][1][0],t.geometry.coordinates[0][1][1]]];if(r({type:B.FEATURE,properties:t.properties,geometry:{coordinates:i,type:B.LINE_STRING}}),o===3)return}return r(t)}};G.onTrash=function(e){this.deleteFeature([e.polygon.id],{silent:!0}),this.changeMode(x.SIMPLE_SELECT)};const{onSetup:nn,onMouseMove:on,...an}=G;({...an});function sn(e){return{...Qr(e),[Ot]:Ae,[ye]:$}}let ve,ie,Tt;const un=()=>{try{ie==null||ie.changeMode("split_polygon",{highlightColor:"#222",lineWidth:.001,lineWidthUnit:"kilometers"})}catch(e){alert(e.message),console.error(e)}};class ln{constructor(t){let r=this;r.draw=t.draw,r.buttons=t.buttons||[],r.onAddOrig=t.draw.onAdd,r.onRemoveOrig=t.draw.onRemove}onAdd(t){let r=this;return r.map=t,r.elContainer=r.onAddOrig(t),r.buttons.forEach(n=>{r.addButton(n)}),r.elContainer}onRemove(t){let r=this;r.buttons.forEach(n=>{r.removeButton(n)}),r.onRemoveOrig(t)}addButton(t){let r=this;var n=document.createElement("button");n.className="mapbox-gl-draw_ctrl-draw-btn",t.classes instanceof Array&&t.classes.forEach(o=>{n.classList.add(o)}),n.addEventListener(t.on,t.action),r.elContainer.appendChild(n),t.elButton=n}removeButton(t){t.elButton.removeEventListener(t.on,t.action),t.elButton.remove()}}mapboxgl.getRTLTextPluginStatus()==="unavailable"&&mapboxgl.setRTLTextPlugin("https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js",e=>{e&&console.error(e)},!0);ve=new mapboxgl.Map({container:"map",style:"https://map.ir/vector/styles/main/mapir-xyz-light-style.json",center:[51.3857,35.6102],zoom:7.78,pitch:0,interactive:!0,hash:!0,attributionControl:!0,customAttribution:"\xA9 Map \xA9 Openstreetmap",transformRequest:e=>({url:e,headers:{"x-api-key":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImRiZWU0YWU4OTk4OTA3MmQ3OTFmMjQ4ZDE5N2VhZTgwZWU2NTUyYjhlYjczOWI2NDdlY2YyYzIzNWRiYThiMzIzOTM5MDkzZDM0NTY2MmU3In0.eyJhdWQiOiI5NDMyIiwianRpIjoiZGJlZTRhZTg5OTg5MDcyZDc5MWYyNDhkMTk3ZWFlODBlZTY1NTJiOGViNzM5YjY0N2VjZjJjMjM1ZGJhOGIzMjM5MzkwOTNkMzQ1NjYyZTciLCJpYXQiOjE1OTA4MjU0NzIsIm5iZiI6MTU5MDgyNTQ3MiwiZXhwIjoxNTkzNDE3NDcyLCJzdWIiOiIiLCJzY29wZXMiOlsiYmFzaWMiXX0.M_z4xJlJRuYrh8RFe9UrW89Y_XBzpPth4yk3hlT-goBm8o3x8DGCrSqgskFfmJTUD2wC2qSoVZzQKB67sm-swtD5fkxZO7C0lBCMAU92IYZwCdYehIOtZbP5L1Lfg3C6pxd0r7gQOdzcAZj9TStnKBQPK3jSvzkiHIQhb6I0sViOS_8JceSNs9ZlVelQ3gs77xM2ksWDM6vmqIndzsS-5hUd-9qdRDTLHnhdbS4_UBwNDza47Iqd5vZkBgmQ_oDZ7dVyBuMHiQFg28V6zhtsf3fijP0UhePCj4GM89g3tzYBOmuapVBobbX395FWpnNC3bYg7zDaVHcllSUYDjGc1A","Mapir-SDK":"reactjs"}})});ie=new MapboxDraw({modes:{...sn(MapboxDraw.modes)},styles:[...Kr(xt)],userProperties:!0});window.draw=ie;Tt=new ln({draw:ie,buttons:[{on:"click",action:un,classes:["split-polygon"]}]});ve.once("load",()=>{ve.resize(),ve.addControl(Tt,"top-right"),ie.set({type:"FeatureCollection",features:[{type:"Feature",properties:{},id:"example-id",geometry:{coordinates:[[[[52,35],[53,35],[53,36],[52,36],[52,35]]],[[[50,35],[51,35],[51,36],[50,36],[50,35]],[[50.2,35.2],[50.8,35.2],[50.8,35.8],[50.2,35.8],[50.2,35.2]]]],type:"MultiPolygon"}}]}),ve.on("draw.update",function(e){console.log("\u{1F680} ~ file: index.js ~ line 158 ~ e",e)})});
